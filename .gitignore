# =====================
# Rust/Cargo ignores
# =====================
# Ignore the entire target directory (build artifacts)
target/

# Ignore Cargo.lock if this is a library (keep for binaries)
Cargo.lock

# Ignore build scripts output
build/

# Ignore Rust/Cargo temporary files
*.rs.bk

# Ignore Rust analyzer files
rust-project.json

# =====================
# Next.js / Node.js ignores
# =====================
# Logs
logs
*.log

# Dependency directories
node_modules/

# Next.js build output
.next/
out/

# Production build output
dist/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Next.js cache
.nyc_output/
coverage/
.next/cache/

# IDE/editor-specific files
.idea/
.vscode/
*.iml

# Backup and swap files
*.swp
*.swo
*.bak
*.tmp

# Local dependencies (if any)
vendor/

# Debugging and profiling files
*.profdata
*.dSYM/
*.gcda
*.gcno
*.cov

# Compiled binaries
*.exe
*.out
*.app

# OS-specific files
.DS_Store
Thumbs.db

# Git-specific files
# Compiler files
cache/
out/

# Ignores development broadcast logs
!/broadcast
/broadcast/*/31337/
/broadcast/**/dry-run/

# Docs
docs/


#################################
# Foundry (Solidity)           ##
#################################
artifacts/
out/
cache/
broadcast/*/31337/
broadcast/**/dry-run/
script/output/
*.t.sol.json

#################################
# Rust / Cargo                 ##
#################################
target/
# Keep Cargo.lock for binaries; comment-out if this is a pure library
# Cargo.lock
*.rs.bk
rust-project.json
**/*.rlib
.cargo/

#################################
# Next.js / Node               ##
#################################
node_modules/
.next/
out/
dist/
logs
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*
bun.lockb
...

